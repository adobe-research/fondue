#!/usr/bin/env node

/*
 * Copyright (c) 2013 Massachusetts Institute of Technology, Adobe Systems
 * Incorporated, and other contributors. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

var httpProxy = require("http-proxy");
var http = require("http");
var fondueMiddleware = require("../fondueMiddleware");

var listenPort = 9000;
var proxiedDomain = "http://www.amazon.com";
//var proxiedDomain = "http://127.0.0.1";
var proxiedPort = 80;
//var proxiedPort = 3000;

console.log("starting a server at http://localhost:" + listenPort);
console.log("proxying requests to " + proxiedDomain + ":" + proxiedPort);

var proxy = httpProxy.createProxyServer();
var middleware = fondueMiddleware();

proxy.on("error", function (err, req, res) {
  console.log("proxy error", err);
  res.end();
});

http.createServer(function (req, res) {
  console.log(req.method, req.url);
  middleware(req, res, function () {
    proxy.web(req, res, {target: "" + proxiedDomain + ":" + proxiedPort});
  });
}).listen(listenPort);
